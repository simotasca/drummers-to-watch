---
interface HeadProps {
  title: string;
  description: string;
}

interface Props {
  props: HeadProps;
}

const { title, description } = Astro.props.props;

const favicon = new URL("/logo.svg", Astro.site!.origin).toString();
const ogSiteName = "Drummers To Watch";
const twitterImageAlt = "Drummers To Watch";
const opengraphImage = new URL("/opengraph.jpg", Astro.site!.origin);

const schema = JSON.stringify({
  "@context": "https://schema.org",
  "@type": "WebPage",
  mainEntityOfPage: {
    "@id": Astro.url,
  },
  headline: title,
  description: description,
  image: opengraphImage, // OK??
  datePublished: Intl.DateTimeFormat("en-EN", { dateStyle: "short" }).format(
    new Date()
  ),
});
---

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content={Astro.generator} />

<!-- BASE -->
<title>{title}</title>
<meta name="description" content={description} />
<link rel="icon" type="image/x-icon" href={favicon} />
<!-- Open Graph -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:site_name" content={ogSiteName} />
<meta property="og:type" content="website" />
<meta property="og:image" content={opengraphImage} />
<meta property="og:url" content={Astro.site!.origin} />
<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:image:alt" content={twitterImageAlt} />
<script type="application/ld+json" set:html={schema} />
