---
import { drummers } from "../videos.json";
---

<x-videos data-drummers={JSON.stringify(drummers)} class="contents">
  <div id="here" class="contents"></div>
  <div
    id="loading-indicator"
    class="h-40 grid place-items-center text-xl cols-span-full"
    style="scroll-snap-align: end;">
    <span>LOADING MORE...</span>
  </div>
</x-videos>

<script>
  interface Drummer {
    name: string;
    ig: string;
    video: string;
    age: number;
  }

  customElements.define(
    "x-videos",
    class VideoElement extends HTMLElement {
      private drummers: Drummer[];
      private loadingIndicator!: HTMLDivElement;

      constructor() {
        super();
        this.drummers = JSON.parse(this.dataset.drummers || "[]");
        this.loadingIndicator =
          document.querySelector<HTMLDivElement>("#loading-indicator")!;

        let observer = new IntersectionObserver((entries) => {
          if (this.drummers.length == 0) return;
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              this.addVideos();
            } else {
            }
          });
        });

        observer.observe(this.loadingIndicator);
      }

      async addVideos() {
        const promises = [];
        const videos: HTMLDivElement[] = [];

        for (const drummer of this.drummers.splice(0, 3)) {
          const container = document.createElement("div");
          container.className =
            "h-screen w-screen grid place-items-center py-6 px-6 max-w-[320px] mx-auto";
          container.style.scrollSnapAlign = "start";

          const videoContainer = document.createElement("div");
          videoContainer.className = "relative";
          container.appendChild(videoContainer);

          const video = document.createElement("video");
          video.className = "object-contain max-h-full w-full";
          video.src = drummer.video;
          video.controls = true;
          videoContainer.appendChild(video);

          const social = document.createElement("div");
          social.className =
            "absolute top-0 left-full w-6 h-full translate-x-1 pt-1";
          social.innerHTML = `
            <img src="/youtube.svg" class="block w-10 origin-center rotate-90" />
            <br/>
            <p style="text-shadow: 0 0 10px black" class="text-xl whitespace-nowrap rotate-90 translate-x-4 origin-top">
              ${drummer.name}, ${String(drummer.age)}
            </p>
          `;
          videoContainer.appendChild(social);

          promises.push(
            new Promise((resolve) => {
              video.addEventListener("loadeddata", () => {
                resolve(null);
              });
            })
          );
          videos.push(container);
        }

        Promise.all(promises).then(async () => {
          setTimeout(() => {
            console.log("loaded all!");
            for (const video of videos) {
              document
                .querySelector<HTMLDivElement>("#here")
                ?.appendChild(video);
            }
            if (this.drummers.length == 0) this.loadingIndicator.remove();
          }, 400);
        });
      }
    }
  );
</script>
