---
import { drummers } from "../videos.json";
---

<div id="videos-container" class="contents">
  <div
    id="loading-placeholder"
    data-drummers={JSON.stringify(drummers)}
    style="scroll-snap-align: start;"
    class="h-full w-full relative mx-auto">
    <div
      class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 aspect-[9/16] max-w-full w-[320px] max-h-[calc(100%)] p-6 object-contain bg-neutral-700 opacity-10 animate-pulse">
    </div>
  </div>
</div>

<script>
  const container =
    document.querySelector<HTMLDivElement>("#videos-container")!;
  let loader = document.querySelector<HTMLDivElement>("#loading-placeholder")!;
  const drummers: any[] = JSON.parse(loader.dataset.drummers!);
  let videos: HTMLVideoElement[] = [];

  let isLoading = false;
  let id = 0;

  const videoObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) return;
        
        const video = entry.target as HTMLVideoElement;

        videos.forEach((vid) => {
          if (vid === video) return;
          vid.pause();
          vid.currentTime = 0;
        });

        if (!video.paused) return;

        video.muted = false;
        video.play().catch(() => {
          console.log("CANNOTTT");
          video.muted = true;
          video.play();
        });
      });
    },
    {
      threshold: 1,
    }
  );

  const observer = new IntersectionObserver((entries) => {
    const [entry] = entries;

    if (!entry.isIntersecting || isLoading) return;

    isLoading = true;

    let promises = [];
    let newVideos: HTMLDivElement[] = [];

    for (const drummer of drummers.splice(0, 2)) {
      const container = document.createElement("div");
      container.className = "h-full w-full relative mx-auto";
      container.style.scrollSnapAlign = "start";
      container.id = "video-" + id;
      id++;

      const video = document.createElement("video");
      video.className =
        "absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 " +
        "aspect-[9/16] max-w-full w-[320px] max-h-[calc(100%-4rem)] object-contain";
      video.src = drummer.video;
      video.controls = true;

      container.appendChild(video);
      newVideos.push(container);

      promises.push(
        new Promise((resolve) => {
          if (video.readyState == 4) return resolve(null);
          video.addEventListener("loadeddata", () => resolve(null));
        })
      );
    }

    Promise.all(promises).then(async () => {
      await new Promise<void>((r) => setTimeout(() => r(), 300));
      loader.remove();
      newVideos.forEach((videoContainer, idx) => {
        container.appendChild(videoContainer);
        const video = videoContainer.querySelector("video")!;
        videoObserver.observe(video);
        videos.push(video);
      });
      if (drummers.length > 0) {
        container.appendChild(loader);
      } else {
        document
          .querySelector<HTMLDivElement>("#footer")!
          .classList.remove("hidden");
      }
      isLoading = false;
    });
  });

  observer.observe(loader);
</script>
