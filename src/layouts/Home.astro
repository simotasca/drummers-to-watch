---
import BackgroundImage from "../components/BackgroundImage.astro";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import VideosComponent from "../components/Videos.astro";
import { getTranslation } from "../lang.js";
import "../style.css";

const t = await getTranslation(Astro.url);
---

<html class="scroll-smooth" lang="en">
  <head>
    <link rel="prefetch" href="/fonts/darker/DarkerGrotesque-Regular.ttf" as="font" type="font/ttf" crossorigin="anonymous" />
    <link rel="prefetch" href="/fonts/darker/DarkerGrotesque-SemiBold.ttf" as="font" type="font/ttf" crossorigin="anonymous" />
    <link rel="prefetch" href="/fonts/darker/DarkerGrotesque-Medium.ttf" as="font" type="font/ttf" crossorigin="anonymous" />
    <BaseHead
      props={{
        title: t.head.title,
        description: t.head.description,
        favicon: new URL("/logo.svg", Astro.site!.origin).toString(),
        jsonLDImage: "",
        opengraphImage: "",
      }}
    />
    <!-- FONT PRELOAD -->
    <style>
      html,
      body {
        height: 100%;
      }
    </style>
  </head>
  <body class="bg-neutral-900 font-sans text-white">
    <BackgroundImage />

    <div class="min-h-full grid grid-rows-[auto_1fr]">
      <Header />

      <main
        class="container max-w-2xl mx-auto text-center place-self-center mb-16 p-6">
        <div class="mx-auto w-11/12 max-w-lg text-right">
          <span class="mr-2">
            {t.created}
            <b class="font-semibold">Liam Menneci</b>
          </span>
          <img
            class="w-full max-w-[80vw]"
            src="/logo-text.svg"
            alt="logo drummers to watch"
          />
        </div>
        <h1 class="text-4xl sm:text-5xl leading-[1] mt-2 font-semibold">
          {t.title}
        </h1>

        <a href="#videos">
          <button
            class="text-xl font-medium border-b border-b-violet-400 py-2 mt-12 sm:mt-4 uppercase">
            {t.watch}
          </button>
        </a>
      </main>
    </div>

    <VideosComponent />

    <div id="footer">
      <Footer />
    </div>
    <script>
      const observer = new IntersectionObserver((entries) => {
        const [main] = entries;
        if (!main) return;
        if (main.isIntersecting) {
          document.querySelectorAll<HTMLVideoElement>("video").forEach((v) => {
            v.pause();
            v.currentTime = 0;
          });
        }
      });
      observer.observe(document.querySelector("main")!);
    </script>
  </body>
</html>
